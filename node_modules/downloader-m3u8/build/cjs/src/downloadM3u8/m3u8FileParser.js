"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseM3u8File = void 0;
var parseM3u8File = function (content) {
    var lines = content.split('\n');
    var line = lines.find(function (line) {
        if (line.indexOf('#EXT-X-STREAM-INF') != -1)
            return true;
    });
    if (line) {
        var realM3u8Url = lines.find(function (line) {
            if (line.indexOf('m3u8') != -1)
                return true;
        });
        console.log(realM3u8Url);
        return { type: 0, realM3u8Url: realM3u8Url };
    }
    return { type: 1, keyUrl: parseKey(content), iv: parseIV(content), tsUrls: parseTsUrls(content) };
};
exports.parseM3u8File = parseM3u8File;
var parseKey = function (content) {
    var lines = content.split('\n');
    var line = lines.find(function (line) {
        if (line.indexOf('EXT-X-KEY') != -1)
            return true;
    });
    var keys = (line === null || line === void 0 ? void 0 : line.split(',')) || '';
    try {
        return keys[1].split('=')[1].replace('"', '').replace('"', '');
    }
    catch (e) {
        return '';
    }
};
var parseIV = function (content) {
    var lines = content.split('\n');
    var line = lines.find(function (line) {
        if (line.indexOf('EXT-X-KEY') != -1)
            return true;
    });
    var keys = (line === null || line === void 0 ? void 0 : line.split(',')) || '';
    try {
        return keys[2].split('=')[1].substring(2);
    }
    catch (e) {
        return '';
    }
};
var parseTsUrls = function (content) {
    var lines = content.split('\n');
    var urls = lines.filter(function (line) {
        return line != '' && line.indexOf('EXT') == -1;
    });
    return urls;
};
